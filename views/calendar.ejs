<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Calendar - Productivity Tracker</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.css">
  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
      --secondary-gradient: linear-gradient(135deg, #FF6B6B 0%, #FF000D 100%);
    }

    [data-theme="dark"] {
      --bg-color: #0f172a;
      --text-color: #e2e8f0;
      --card-bg: #1e293b;
      --border-color: #334155;
      --sidebar-bg: #1e293b;
      --hover-bg: #2d3748;
      --shadow-color: rgba(0, 0, 0, 0.3);
      --grid-color: rgba(255, 255, 255, 0.1);
    }

    [data-theme="light"] {
      --bg-color: #f4f7fa;
      --text-color: #333333;
      --card-bg: #ffffff;
      --border-color: #e0e0e0;
      --sidebar-bg: #ffffff;
      --hover-bg: #f8fafc;
      --shadow-color: rgba(0, 0, 0, 0.1);
      --grid-color: rgba(0, 0, 0, 0.1);
    }

    body {
      min-height: 100vh;
      background-color: var(--bg-color);
      color: var(--text-color);
      font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
      transition: all 0.3s ease;
    }

    .dashboard-container {
      display: flex;
      min-height: 100vh;
    }

    .sidebar {
      width: 280px;
      background: var(--sidebar-bg);
      padding: 2rem;
      border-right: 1px solid var(--border-color);
      position: fixed;
      height: 100vh;
      overflow-y: auto;
      box-shadow: 2px 0 10px var(--shadow-color);
    }

    .main-content {
      flex: 1;
      margin-left: 280px;
      padding: 2rem;
    }

    .sidebar-header {
      margin-bottom: 2rem;
    }

    .sidebar-header h1 {
      font-size: 1.5rem;
      font-weight: 700;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      margin-bottom: 0;
    }

    .sidebar-header .subtitle {
      font-size: 0.8rem;
      color: var(--text-color);
      opacity: 0.7;
      margin-top: -5px;
    }

    .nav-link {
      color: var(--text-color);
      padding: 0.8rem 1rem;
      border-radius: 10px;
      margin-bottom: 0.5rem;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .nav-link:hover {
      background: var(--hover-bg);
      color: var(--text-color);
      transform: translateX(5px);
    }

    .nav-link i {
      margin-right: 10px;
    }

    /* Theme toggle button specific styles */
    button.nav-link {
      background: var(--card-bg);
      border: 1px solid var(--border-color);
      color: var(--text-color);
      font-weight: 600;
      box-shadow: 0 2px 5px var(--shadow-color);
    }

    button.nav-link:hover {
      background: var(--hover-bg);
      color: var(--text-color);
      border-color: var(--border-color);
      transform: translateX(5px);
    }

    /* Logout button specific styles */
    button.nav-link.text-danger {
      color: #dc3545 !important;
    }

    button.nav-link.text-danger:hover {
      background: #dc3545;
      color: white !important;
    }

    .calendar-card {
      background: var(--card-bg);
      border-radius: 15px;
      padding: 2rem;
      border: 1px solid var(--border-color);
      box-shadow: 0 4px 15px var(--shadow-color);
    }

    .fc {
      background: var(--card-bg);
      border-radius: 10px;
      font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
    }

    .fc-toolbar-title {
      color: var(--text-color) !important;
      font-size: 1.5rem !important;
      font-weight: 600 !important;
    }

    .fc-button-primary {
      background: var(--card-bg) !important;
      border: 1px solid var(--border-color) !important;
      color: var(--text-color) !important;
      padding: 8px 16px !important;
      font-weight: 500 !important;
      transition: all 0.2s ease !important;
      box-shadow: 0 2px 5px var(--shadow-color);
    }

    .fc-button-primary:hover {
      background: var(--hover-bg) !important;
      transform: translateY(-1px);
    }

    .fc-button-primary:not(:disabled).fc-button-active,
    .fc-button-primary:not(:disabled):active {
      background: #3b82f6 !important;
      border-color: #3b82f6 !important;
      color: white !important;
    }

    .fc-view {
      border-radius: 10px;
      overflow: hidden;
      border: 1px solid var(--border-color);
      box-shadow: 0 4px 15px var(--shadow-color);
    }

    .fc-scrollgrid {
      border: none !important;
    }

    .fc-scrollgrid-section-header th {
      border: none !important;
      padding: 12px !important;
      background: var(--card-bg);
    }

    .fc-col-header-cell {
      background: var(--card-bg);
      padding: 12px !important;
      font-weight: 600;
      border-bottom: 1px solid var(--border-color) !important;
    }

    .fc-daygrid-day {
      transition: all 0.2s ease;
      border: 1px solid var(--grid-color) !important;
    }

    .fc-daygrid-day:hover {
      background: var(--hover-bg);
    }

    .fc-daygrid-day-number {
      font-weight: 500;
      padding: 8px !important;
      color: var(--text-color);
    }

    .fc-event {
      cursor: pointer;
      border: none !important;
      padding: 6px 10px !important;
      margin: 2px !important;
      border-radius: 6px !important;
      font-size: 0.9rem !important;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .event-urgent {
      background: #FF6B6B !important;
      color: white !important;
    }

    .event-scheduled {
      background: #4A90E2 !important;
      color: white !important;
    }

    .event-completed {
      background: #2ECC71 !important;
      color: white !important;
      text-decoration: line-through;
    }

    .fc-event-title {
      font-weight: 500;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .fc-day-today {
      background: rgba(59, 130, 246, 0.1) !important;
      border: 2px solid #3b82f6 !important;
    }

    .fc-toolbar-chunk {
      display: flex;
      gap: 8px;
    }

    [data-theme="dark"] .fc-button-primary {
      background: var(--card-bg) !important;
      border-color: var(--border-color) !important;
    }

    [data-theme="dark"] .fc-button-primary:hover {
      background: var(--hover-bg) !important;
    }

    [data-theme="dark"] .fc-day-today {
      background: rgba(59, 130, 246, 0.05) !important;
      border: 2px solid #3b82f6 !important;
    }

    .fc-theme-standard td, 
    .fc-theme-standard th {
      border: 1px solid var(--grid-color) !important;
    }

    .fc-theme-standard .fc-scrollgrid {
      border: 1px solid var(--border-color) !important;
    }

    @media (max-width: 768px) {
      .dashboard-container {
        flex-direction: column;
      }

      .sidebar {
        width: 100%;
        height: auto;
        position: relative;
        border-right: none;
        border-bottom: 1px solid var(--border-color);
      }

      .main-content {
        margin-left: 0;
        padding: 1rem;
      }
    }
  </style>
</head>
<body data-theme="<%= session.theme || 'light' %>">
  <div class="dashboard-container">
    <div class="sidebar">
      <div class="sidebar-header">
        <h1>Momentum</h1>
        <div class="subtitle">Productivity Tracker</div>
        <p class="text-muted">Welcome, <%= session.username %></p>
      </div>
      <nav>
        <a href="/" class="nav-link">
          <i class="bi bi-house-door"></i> Dashboard
        </a>
        <a href="/calendar" class="nav-link active">
          <i class="bi bi-calendar3"></i> Calendar
        </a>
        <a href="/analytics" class="nav-link">
          <i class="bi bi-graph-up"></i> Analytics
        </a>
        <a href="/account" class="nav-link">
          <i class="bi bi-person"></i> Profile
        </a>
        <hr>
        <button class="nav-link w-100 text-start" onclick="toggleTheme()">
          <i class="bi bi-moon-stars"></i> Toggle Theme
        </button>
        <form action="/logout" method="POST">
          <button type="submit" class="nav-link w-100 text-start text-danger">
            <i class="bi bi-box-arrow-right"></i> Logout
          </button>
        </form>
      </nav>
    </div>

    <div class="main-content">
      <div class="calendar-card">
        <div id="calendar"></div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.10.1/main.min.js"></script>
  <script>
    function toggleTheme() {
      const body = document.body;
      const currentTheme = body.getAttribute('data-theme');
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      body.setAttribute('data-theme', newTheme);
      
      fetch('/update-theme', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ theme: newTheme })
      });
    }

    document.addEventListener('DOMContentLoaded', function() {
      const calendarEl = document.getElementById('calendar');
      const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        events: <%- JSON.stringify(tasks) %>,
        eventClick: function(info) {
          const event = info.event;
          const props = event.extendedProps;
          const timeStr = props.estimatedTime 
            ? `\nEstimated Time: ${props.estimatedTime} minutes` 
            : '';
          const actualTimeStr = props.actualTime 
            ? `\nActual Time: ${props.actualTime} minutes` 
            : '';
          const assignedStr = props.assignedTo 
            ? `\nAssigned to: ${props.assignedTo}` 
            : '';
          const statusStr = `\nStatus: ${props.status || 'pending'}`;
          
          alert(
            'Task: ' + event.title + '\n' +
            'Description: ' + event.extendedProps.description + 
            statusStr +
            timeStr +
            actualTimeStr +
            assignedStr +
            '\nDue Date: ' + event.start.toLocaleDateString('en-GB', {day: 'numeric', month: 'long', year: 'numeric'})
          );
        },
        eventDidMount: function(info) {
          // Add tooltip
          info.el.title = `${info.event.title}\n${info.event.extendedProps.description}`;
        }
      });
      calendar.render();
    });
  </script>
</body>
</html> 